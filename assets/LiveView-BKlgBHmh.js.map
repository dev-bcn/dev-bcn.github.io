{"version":3,"file":"LiveView-BKlgBHmh.js","sources":["../../src/views/Talks/TalkCardAdapter.ts","../../src/views/Talks/LiveView.tsx"],"sourcesContent":["import {UngroupedSession} from \"./liveView.types\";\nimport {TalkCardProps} from \"./components/TalkCard\";\n\nimport {\n  QuestionAnswers,\n  SessionCategory,\n  SessionSpeaker\n} from \"../../types/sessions\";\n\nexport const talkCardAdapter = (session: UngroupedSession, year: string = \"2024\"): TalkCardProps => {\n  return {\n    talk: {\n      id: parseInt(session.id),\n      title: session.title,\n      talkImage: 1,\n      speakers: session.speakers.map((speaker) => ({\n        id: speaker.id,\n        name: speaker.name,\n      })) as SessionSpeaker[],\n      level: \"Beginner\",\n      link: \"\",\n      tags: [],\n      track: session.room,\n      categories: session.categories.map((category) => ({\n        id: category.id,\n        name: category.name,\n        categoryItems: category.categoryItems,\n      })) as SessionCategory[],\n      questionAnswers: session.questionAnswers.map((qa) => ({\n        id: qa.id,\n        question: qa.question,\n        answer: qa.answer,\n      })) as QuestionAnswers[],\n    },\n    year,\n    showTrack: true, // Default value, adjust as necessary\n  };\n};\n","import React, { FC, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useFetchLiveView } from \"@hooks/useFetchTalks\";\nimport { Loading } from \"@components/Loading/Loading\";\nimport { UngroupedSession } from \"./liveView.types\";\nimport conference from \"@data/2025.json\";\nimport { TalkCard } from \"./components/TalkCard\";\nimport { StyledAgenda, StyledMain } from \"./Talks.style\";\nimport { talkCardAdapter } from \"./TalkCardAdapter\";\nimport { useSentryErrorReport } from \"@hooks/useSentryErrorReport\";\nimport { useDateInterval } from \"@hooks/useDateInterval\";\nimport { isWithinInterval } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport { ROUTE_SCHEDULE } from \"@constants/routes\";\n// @ts-expect-error some quirky import\nimport { AnimatePresence } from \"framer-motion\";\n\nexport const LiveView: FC<React.PropsWithChildren<unknown>> = () => {\n  const { isLoading, error, data } = useFetchLiveView();\n  const [currentTime, setCurrentTime] = useState<Date>(new Date());\n  const { isConferenceActive } = useDateInterval(currentTime, conference);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const getPredicate = useCallback(\n    () => (session: UngroupedSession) =>\n      isWithinInterval(currentTime, {\n        start: session.startsAt,\n        end: session.endsAt,\n      }),\n    [currentTime],\n  );\n\n  const filteredTalks = useMemo(() => {\n    return data?.filter(getPredicate());\n  }, [data, getPredicate]);\n\n  useEffect(() => {\n    document.title = `Live view - ${conference.title} - ${conference.edition} Edition`;\n  }, []);\n\n  useSentryErrorReport(error);\n\n  return (\n    <StyledMain>\n      <img\n        src=\"/images/logo.png\"\n        alt={conference.title}\n        style={{ width: \"25%\" }}\n      />\n      <h1 style={{ marginTop: \"1rem\" }}>\n        {conference.title} - {conference.edition} Edition\n      </h1>\n\n      {isLoading && <Loading />}\n      <article>\n        {`${currentTime.toLocaleDateString()} - ${currentTime.toLocaleTimeString()}`}{\" \"}\n        - Live Schedule\n      </article>\n\n      {!isConferenceActive && <h4>The live schedule is not ready yet</h4>}\n      <StyledAgenda>\n        <AnimatePresence>\n          {isConferenceActive && filteredTalks?.length === 0 && (\n            <p style={{ textAlign: \"center\", flexGrow: \"4\" }}>\n              No sessions available, enjoy the break!\n            </p>\n          )}\n          {filteredTalks?.map((session) => (\n            <TalkCard key={session.id} {...talkCardAdapter(session)} />\n          ))}\n        </AnimatePresence>\n      </StyledAgenda>\n      {process.env.NODE_ENV === \"test\" ? (\n        <a\n          href={ROUTE_SCHEDULE}\n          style={{\n            textDecoration: \"none\",\n            fontWeight: \"bold\",\n            margin: \"0.5rem\",\n          }}\n        >\n          ðŸ“… Back to schedule\n        </a>\n      ) : (\n        <Link\n          to={ROUTE_SCHEDULE}\n          style={{\n            textDecoration: \"none\",\n            fontWeight: \"bold\",\n            margin: \"0.5rem\",\n          }}\n        >\n          ðŸ“… Back to schedule\n        </Link>\n      )}\n    </StyledMain>\n  );\n};\n"],"names":["talkCardAdapter","session","year","speaker","category","qa","LiveView","isLoading","error","data","useFetchLiveView","currentTime","setCurrentTime","useState","isConferenceActive","useDateInterval","conference","useEffect","intervalId","getPredicate","useCallback","isWithinInterval","filteredTalks","useMemo","useSentryErrorReport","StyledMain","jsx","Loading","StyledAgenda","jsxs","AnimatePresence","TalkCard","Link","ROUTE_SCHEDULE"],"mappings":"wrBASO,MAAMA,EAAkB,CAACC,EAA2BC,EAAe,UACjE,CACL,KAAM,CACJ,GAAI,SAASD,EAAQ,EAAE,EACvB,MAAOA,EAAQ,MACf,UAAW,EACX,SAAUA,EAAQ,SAAS,IAAKE,IAAa,CAC3C,GAAIA,EAAQ,GACZ,KAAMA,EAAQ,IAAA,EACd,EACF,MAAO,WACP,KAAM,GACN,KAAM,CAAC,EACP,MAAOF,EAAQ,KACf,WAAYA,EAAQ,WAAW,IAAKG,IAAc,CAChD,GAAIA,EAAS,GACb,KAAMA,EAAS,KACf,cAAeA,EAAS,aAAA,EACxB,EACF,gBAAiBH,EAAQ,gBAAgB,IAAKI,IAAQ,CACpD,GAAIA,EAAG,GACP,SAAUA,EAAG,SACb,OAAQA,EAAG,MAAA,EACX,CACJ,EACA,KAAAH,EACA,UAAW,EACb,GCpBWI,EAAiD,IAAM,CAClE,KAAM,CAAE,UAAAC,EAAW,MAAAC,EAAO,KAAAC,CAAA,EAASC,EAAiB,EAC9C,CAACC,EAAaC,CAAc,EAAIC,EAAAA,SAAe,IAAI,IAAM,EACzD,CAAE,mBAAAC,CAAuB,EAAAC,EAAgBJ,EAAaK,CAAU,EAEtEC,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAa,YAAY,IAAM,CACpBN,EAAA,IAAI,IAAM,GACxB,GAAK,EAED,MAAA,IAAM,cAAcM,CAAU,CACvC,EAAG,EAAE,EAEL,MAAMC,EAAeC,EAAA,YACnB,IAAOnB,GACLoB,EAAiBV,EAAa,CAC5B,MAAOV,EAAQ,SACf,IAAKA,EAAQ,MAAA,CACd,EACH,CAACU,CAAW,CACd,EAEMW,EAAgBC,EAAAA,QAAQ,IACrBd,GAAM,OAAOU,GAAc,EACjC,CAACV,EAAMU,CAAY,CAAC,EAEvBF,OAAAA,EAAAA,UAAU,IAAM,CACd,SAAS,MAAQ,eAAeD,EAAW,KAAK,MAAMA,EAAW,OAAO,UAC1E,EAAG,EAAE,EAELQ,EAAqBhB,CAAK,SAGvBiB,EACC,CAAA,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,IAAI,mBACJ,IAAKV,EAAW,MAChB,MAAO,CAAE,MAAO,KAAM,CAAA,CACxB,SACC,KAAG,CAAA,MAAO,CAAE,UAAW,QACrB,SAAA,CAAWA,EAAA,MAAM,MAAIA,EAAW,QAAQ,UAAA,EAC3C,EAECT,SAAcoB,EAAQ,EAAA,SACtB,UACE,CAAA,SAAA,CAAA,GAAGhB,EAAY,mBAAoB,CAAA,MAAMA,EAAY,oBAAoB,GAAI,IAAI,iBAAA,EAEpF,EAEC,CAACG,GAAuBY,EAAAA,IAAA,KAAA,CAAG,SAAkC,qCAAA,QAC7DE,EACC,CAAA,SAACC,EAAAA,KAAAC,EACE,CAAA,SAAA,CAAAhB,GAAsBQ,GAAe,SAAW,GAC/CI,EAAA,IAAC,IAAE,CAAA,MAAO,CAAE,UAAW,SAAU,SAAU,GAAA,EAAO,SAElD,0CAAA,EAEDJ,GAAe,IAAKrB,SAClB8B,EAAA,CAA2B,GAAG/B,EAAgBC,CAAO,GAAvCA,EAAQ,EAAkC,CAC1D,CAAA,CAAA,CACH,CAAA,CACF,EAaEyB,EAAA,IAACM,EAAA,CACC,GAAIC,EACJ,MAAO,CACL,eAAgB,OAChB,WAAY,OACZ,OAAQ,QACV,EACD,SAAA,qBAAA,CAAA,CAED,EAEJ,CAEJ"}