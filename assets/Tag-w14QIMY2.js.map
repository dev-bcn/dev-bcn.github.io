{"version":3,"file":"Tag-w14QIMY2.js","sources":["../../src/components/Tag/Style.Tag.tsx","../../src/components/Tag/Tag.tsx"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const StyledTagWrapper = styled.div.withConfig({\n  shouldForwardProp: (prop) => ![\"borderColor\"].includes(prop),\n})<{ borderColor: string }>`\n  border: ${({ borderColor }) => {\n    return `1px solid ${borderColor}`;\n  }};\n  background: transparent;\n  border-radius: 5px;\n  margin: 0.25rem;\n`;\nexport const StyledTagText = styled.p<{ color: string }>`\n  padding: 0.25rem 0.5rem 0;\n  margin-bottom: 0.3rem;\n  color: ${({ color }) => {\n    return color;\n  }};\n  font-size: 0.8rem;\n`;\n","import { FC } from \"react\";\nimport { Color } from \"@styles/colors\";\nimport { StyledTagText, StyledTagWrapper } from \"./Style.Tag\";\n\ntype TagProps = {\n  text: string;\n  textColor?: string;\n};\n\ntype ColorMap = {\n  [key: string]: string;\n};\n\nconst colorMap: ColorMap = {\n  agile: Color.GREEN,\n  agility: Color.GREEN,\n  ai: Color.BROWN,\n  architecture: Color.RED,\n  cloud: Color.YELLOW,\n  code: Color.RED,\n  coding: Color.RED,\n  devops: Color.PINK,\n  \"functional programming\": Color.PURPLE,\n  functions: Color.SKY_BLUE,\n  go: Color.WHITE,\n  graalvm: Color.GREEN,\n  groovy: Color.DARK_BLUE,\n  java: Color.SKY_BLUE,\n  javascript: Color.YELLOW,\n  jbang: Color.MAGENTA,\n  jdk: Color.DARK_BLUE,\n  jvm: Color.DARK_BLUE,\n  kotlin: Color.DARK_BLUE,\n  kubernetes: Color.MAGENTA,\n  lambda: Color.MAGENTA,\n  lambdas: Color.MAGENTA,\n  machine: Color.PURPLE,\n  maven: Color.ORANGE,\n  microservices: Color.GREEN,\n  microservice: Color.GREEN,\n  observability: Color.SKY_BLUE,\n  openjdk: Color.WHITE,\n  opentelemetry: Color.ORANGE,\n  python: Color.WHITE,\n  quarkus: Color.PURPLE,\n  rabbitmq: Color.RED,\n  react: Color.ORANGE,\n  \"react native\": Color.SKY_BLUE,\n  redux: Color.ORANGE,\n  rust: Color.WHITE,\n  scala: Color.DARK_BLUE,\n  security: Color.GREEN,\n  serverless: Color.BROWN,\n  tdd: Color.GRAY,\n  testing: Color.GRAY,\n};\n\nexport const colorTagByText = (text: string): string => {\n  const lowercaseText = text.toLowerCase();\n  for (const [key, value] of Object.entries(colorMap)) {\n    if (lowercaseText.includes(key)) {\n      return value;\n    }\n  }\n  return \"#000000\";\n};\n\nexport const Tag: FC<React.PropsWithChildren<TagProps>> = ({\n  text,\n  textColor,\n}) => {\n  const color = colorTagByText(text);\n  return (\n    <StyledTagWrapper borderColor={color}>\n      <StyledTagText color={textColor ? textColor : color}>\n        {text}\n      </StyledTagText>\n    </StyledTagWrapper>\n  );\n};\n"],"names":["StyledTagWrapper","styled","prop","borderColor","StyledTagText","color","colorMap","Color","colorTagByText","text","lowercaseText","key","value","Tag","textColor","jsx"],"mappings":"0XAEa,MAAAA,EAAmBC,EAAO,IAAI,WAAW,CACpD,kBAAoBC,GAAS,CAAC,CAAC,aAAa,EAAE,SAASA,CAAI,CAC7D,CAAC;AAAA,YACW,CAAC,CAAE,YAAAC,KACJ,aAAaA,CAAW,EAChC;AAAA;AAAA;AAAA;AAAA,EAKUC,EAAgBH,EAAO;AAAA;AAAA;AAAA,WAGzB,CAAC,CAAE,MAAAI,KACHA,CACR;AAAA;AAAA,ECJGC,EAAqB,CACzB,MAAOC,EAAM,MACb,QAASA,EAAM,MACf,GAAIA,EAAM,MACV,aAAcA,EAAM,IACpB,MAAOA,EAAM,OACb,KAAMA,EAAM,IACZ,OAAQA,EAAM,IACd,OAAQA,EAAM,KACd,yBAA0BA,EAAM,OAChC,UAAWA,EAAM,SACjB,GAAIA,EAAM,MACV,QAASA,EAAM,MACf,OAAQA,EAAM,UACd,KAAMA,EAAM,SACZ,WAAYA,EAAM,OAClB,MAAOA,EAAM,QACb,IAAKA,EAAM,UACX,IAAKA,EAAM,UACX,OAAQA,EAAM,UACd,WAAYA,EAAM,QAClB,OAAQA,EAAM,QACd,QAASA,EAAM,QACf,QAASA,EAAM,OACf,MAAOA,EAAM,OACb,cAAeA,EAAM,MACrB,aAAcA,EAAM,MACpB,cAAeA,EAAM,SACrB,QAASA,EAAM,MACf,cAAeA,EAAM,OACrB,OAAQA,EAAM,MACd,QAASA,EAAM,OACf,SAAUA,EAAM,IAChB,MAAOA,EAAM,OACb,eAAgBA,EAAM,SACtB,MAAOA,EAAM,OACb,KAAMA,EAAM,MACZ,MAAOA,EAAM,UACb,SAAUA,EAAM,MAChB,WAAYA,EAAM,MAClB,IAAKA,EAAM,KACX,QAASA,EAAM,IACjB,EAEaC,EAAkBC,GAAyB,CAChD,MAAAC,EAAgBD,EAAK,YAAY,EACvC,SAAW,CAACE,EAAKC,CAAK,IAAK,OAAO,QAAQN,CAAQ,EAC5C,GAAAI,EAAc,SAASC,CAAG,EACrB,OAAAC,EAGJ,MAAA,SACT,EAEaC,EAA6C,CAAC,CACzD,KAAAJ,EACA,UAAAK,CACF,IAAM,CACE,MAAAT,EAAQG,EAAeC,CAAI,EAE/B,OAAAM,EAAAA,IAACf,EAAiB,CAAA,YAAaK,EAC7B,SAAAU,MAACX,EAAc,CAAA,MAAOU,GAAwBT,EAC3C,SAAAI,CACH,CAAA,EACF,CAEJ"}