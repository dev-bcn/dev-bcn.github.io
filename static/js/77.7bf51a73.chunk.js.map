{"version":3,"file":"static/js/77.7bf51a73.chunk.js","mappings":"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","sources":["assets/images/LocationIcon.svg","views/JobOffers/components/JobsCard.tsx","views/Talks/Talks.style.ts","assets/images/LessThanDarkBlueIcon.svg","views/Talks/components/TalkCard.tsx","views/Talks/components/TrackInformation.tsx","views/Talks/Talks.tsx"],"sourcesContent":["var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLocationIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"395.71px\",\n    height: \"395.71px\",\n    viewBox: \"0 0 395.71 395.71\",\n    style: {\n      enableBackground: \"new 0 0 395.71 395.71\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.849,0C122.131,0,60.531,61.609,60.531,137.329c0,72.887,124.591,243.177,129.896,250.388l4.951,6.738 c0.579,0.792,1.501,1.255,2.471,1.255c0.985,0,1.901-0.463,2.486-1.255l4.948-6.738c5.308-7.211,129.896-177.501,129.896-250.388 C335.179,61.609,273.569,0,197.849,0z M197.849,88.138c27.13,0,49.191,22.062,49.191,49.191c0,27.115-22.062,49.191-49.191,49.191 c-27.114,0-49.191-22.076-49.191-49.191C148.658,110.2,170.734,88.138,197.849,88.138z\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null)), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null)), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLocationIcon);\nexport default __webpack_public_path__ + \"static/media/LocationIcon.20528fd9bc2d91e6963ed4d22bf51947.svg\";\nexport { ForwardRef as ReactComponent };","import { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  StyledFaqCard,\n  StyledFaqImage,\n  StyledFaqImageContainer,\n  StyledFaqText,\n  StyledFaqTitle,\n} from \"../../Home/components/Faqs/components/FaqsCard\";\nimport styled from \"styled-components\";\nimport { Color } from \"../../../styles/colors\";\nimport { motion } from \"framer-motion\";\nimport LocationIcon from \"../../../assets/images/LocationIcon.svg\";\n\ntype IJobsCardProps = {\n  item: {\n    title: string;\n    location: string;\n    text: string;\n  };\n  index: number;\n};\n\nexport const StyledJobsInfo = styled(motion.div)<{ align: string }>`\n  color: ${Color.BLACK_BLUE};\n`;\n\nconst StyledLocationContainer = styled.div`\n  display: flex;\n  padding-top: 0.25rem;\n`;\n\nconst StyledLocationImage = styled.img`\n  height: 0.75rem;\n`;\n\nconst StyledLocationText = styled.p`\n  font-size: 0.75rem;\n  padding-left: 0.25rem;\n`;\n\nconst StyledJobsButton = styled.div`\n  background: ${Color.DARK_BLUE};\n  padding: 0.25rem 0.75rem;\n`;\n\nconst StyledJobsText = styled.p`\n  color: ${Color.WHITE};\n`;\n\nconst JobsCard: FC<IJobsCardProps> = ({ item, index }) => {\n  const isOdd = index % 2 === 0;\n\n  return (\n    <StyledFaqCard direction={isOdd ? \"row\" : \"row-reverse\"}>\n      <StyledFaqImageContainer\n        padding={isOdd ? \"0 .75rem 0 0\" : \"0 0 0 .75rem\"}\n      >\n        <StyledFaqImage\n          src={require(`../../../assets/images/FaqsImage1.png`)}\n        />\n      </StyledFaqImageContainer>\n      <StyledJobsInfo align={isOdd ? \"flex-start\" : \"flex-end\"}>\n        <StyledFaqTitle>{item.title}</StyledFaqTitle>\n        <StyledLocationContainer>\n          <StyledLocationImage src={LocationIcon} />\n          <StyledLocationText>{item.location}</StyledLocationText>\n        </StyledLocationContainer>\n        <StyledFaqText>{item.text}</StyledFaqText>\n        <Link to=\"/\" className=\"link--text\">\n          <StyledJobsButton>\n            <StyledJobsText>Apply</StyledJobsText>\n          </StyledJobsButton>\n        </Link>\n      </StyledJobsInfo>\n    </StyledFaqCard>\n  );\n};\n\nexport default JobsCard;\n","import styled from \"styled-components\";\nimport { Color } from \"../../styles/colors\";\nimport { BIG_BREAKPOINT, TABLET_BREAKPOINT } from \"../../constants/BreakPoints\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledTitleContainer = styled.div`\n  display: flex;\n  width: 100%;\n`;\nexport const StyledTitleIcon = styled.img`\n  width: 8%;\n  display: none;\n\n  @media (min-width: ${BIG_BREAKPOINT}px) {\n    display: flex;\n  }\n`;\nexport const StyledSpeakersSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 2rem 1rem;\n`;\nexport const StyledWaveContainer = styled.div`\n  background: ${Color.DARK_BLUE};\n  overflow-y: hidden;\n  height: 8rem;\n  width: 100%;\n  @media (min-width: ${TABLET_BREAKPOINT}px) {\n    height: 10rem;\n  }\n`;\nexport const StyledMarginBottom = styled.div`\n  margin-bottom: 20rem;\n`;\nexport const StyledSessionText = styled.div`\n  color: ${Color.WHITE};\n  padding: 0.5rem 0;\n  font-size: 0.8em;\n  @media (min-width: 800px) {\n    hyphens: auto;\n    word-wrap: break-word;\n    text-align: left;\n  }\n`;\nexport const StyledSessionCard = styled.div`\n  align-items: center;\n  /*min-width: 20%;\n  max-width: 50%;*/\n  margin: 5px 3rem 3rem;\n  flex-grow: 2;\n  background: linear-gradient(\n    90deg,\n    rgba(0, 36, 84, 0.2) 0%,\n    rgba(71, 152, 202, 0.2) 100%\n  );\n  border-radius: 10px;\n  padding: 15px;\n  @media (min-width: 800px) {\n    text-align: left;\n    max-width: 900px;\n    margin-bottom: 1.5rem;\n  }\n`;\nexport const StyledTagsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  margin-bottom: 0.5rem;\n`;\nexport const StyledTalkTitle = styled(Link)`\n  font-weight: bold;\n  text-decoration: none;\n  color: ${Color.YELLOW};\n  padding: 5px 7px;\n  transition-duration: 0.5s;\n  margin-bottom: 10px;\n\n  :hover,\n  :focus,\n  :active {\n    color: ${Color.WHITE};\n    transition-timing-function: cubic-bezier(0.47, 2.02, 0.31, -0.36);\n  }\n`;\nexport const StyledTrackInfo = styled.h2`\n   {\n    color: ${Color.DARK_BLUE};\n    margin-top: 50px;\n    margin-left: 40px;\n    margin-bottom: 20px;\n  }\n`;\nexport const StyledSessionSection = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  width: 100%;\n`;\n\nexport const StyledTalkSpeaker = styled.p`\n  font-size: 1em;\n  a:before {\n    content: \"🧑🏻‍💻 \";\n  }\n  a {\n    text-decoration: none;\n    color: ${Color.WHITE};\n  }\n  a:hover {\n    color: ${Color.DARK_BLUE};\n  }\n`;\n\nexport const StyledSelectTrack = styled.select`\n   {\n    padding: 5px;\n    color: ${Color.YELLOW};\n    background-color: ${Color.LIGHT_BLUE};\n    font-family: \"Square 721 Regular\", sans-serif;\n    border: none;\n    font-size: 1.2em;\n    max-width: 15%;\n  }\n`;\n","var _defs, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLessThanDarkBlueIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    \"data-name\": \"Capa 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 256 256\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#002454;}\"))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M243.46,7V73l-163.85,50V133l163.85,50v66L12.54,170.89V85.11Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLessThanDarkBlueIcon);\nexport default __webpack_public_path__ + \"static/media/LessThanDarkBlueIcon.dab9105833fa2acf1d85996720fd8dbd.svg\";\nexport { ForwardRef as ReactComponent };","import { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { StyledJobsInfo } from \"../../JobOffers/components/JobsCard\";\nimport { Tag } from \"../../../components/Tag/Tag\";\nimport {\n  ROUTE_SPEAKER_DETAIL,\n  ROUTE_TALK_DETAIL,\n} from \"../../../constants/routes\";\nimport {\n  CategoryItemEnum,\n  QuestionAnswers,\n  SessionCategory,\n  SessionSpeaker,\n} from \"../Talk.types\";\nimport {\n  extractSessionCategoryInfo,\n  extractSessionTags,\n} from \"../UseFetchTalks\";\nimport {\n  StyledSessionCard,\n  StyledSessionText,\n  StyledTagsWrapper,\n  StyledTalkSpeaker,\n  StyledTalkTitle,\n} from \"../Talks.style\";\n\ninterface TalkCardProps {\n  index: number;\n  talk: {\n    id: number;\n    title: string;\n    talkImage?: number;\n    speakers: SessionSpeaker[];\n    level?: string;\n    link?: string;\n    tags?: string[];\n    categories: SessionCategory[];\n    questionAnswers: QuestionAnswers[];\n  };\n  key: number;\n}\n\nexport const TalkCard: FC<TalkCardProps> = ({ talk }) => {\n  return (\n    <StyledSessionCard>\n      <StyledJobsInfo align={\"flex-start\"}>\n        <StyledTalkTitle to={`${ROUTE_TALK_DETAIL}/${talk.id}`}>\n          {talk.title}\n        </StyledTalkTitle>\n        <StyledSessionText>\n          {talk.speakers.map((speaker: SessionSpeaker) => (\n            <StyledTalkSpeaker key={speaker.id}>\n              <Link to={`${ROUTE_SPEAKER_DETAIL}/${speaker.id}`}>\n                {speaker.name}\n              </Link>\n            </StyledTalkSpeaker>\n          ))}\n        </StyledSessionText>\n        <StyledSessionText>\n          {`${extractSessionCategoryInfo(\n            talk.categories,\n            CategoryItemEnum.Format\n          )} `}\n          {extractSessionCategoryInfo(talk.categories)}{\" \"}\n        </StyledSessionText>\n        <StyledTagsWrapper>\n          {extractSessionTags(talk.questionAnswers)?.map((tag) => {\n            return <Tag key={tag} text={tag} />;\n          })}\n        </StyledTagsWrapper>\n      </StyledJobsInfo>\n    </StyledSessionCard>\n  );\n};\n","import React, { FC, useMemo } from \"react\";\nimport { TalkCard } from \"./TalkCard\";\nimport { IGroup } from \"../Talk.types\";\nimport { StyledSessionSection, StyledTrackInfo } from \"../Talks.style\";\n\ninterface TrackInfoProps {\n  track: IGroup;\n}\n\nconst useGenerateAnchorName = (trackName: string) => {\n  const visibleTodos = useMemo(() => {\n    return trackName\n      .split(/\\s+/)\n      .map((word) => word.replace(/,$/, \"\").toLowerCase());\n  }, [trackName]);\n  return visibleTodos[0];\n};\n\nconst TrackInformation: FC<TrackInfoProps> = ({ track }) => {\n  const anchorName = useGenerateAnchorName(track.groupName);\n\n  return (\n    <div style={{ marginLeft: \"40px\" }} className=\"track-information\">\n      <StyledTrackInfo id={anchorName}>{track.groupName}</StyledTrackInfo>\n      <StyledSessionSection>\n        {Array.isArray(track.sessions) &&\n          track.sessions.map((session) => (\n            <TalkCard talk={session} key={session.id} index={session.id} />\n          ))}\n      </StyledSessionSection>\n    </div>\n  );\n};\n\nexport default React.memo(TrackInformation);\n","import React, { FC, useEffect, useState } from \"react\";\nimport LessThanDarkBlueIcon from \"../../assets/images/LessThanDarkBlueIcon.svg\";\nimport MoreThanBlueIcon from \"../../assets/images/MoreThanBlueIcon.svg\";\nimport SectionWrapper from \"../../components/SectionWrapper/SectionWrapper\";\nimport TitleSection from \"../../components/SectionTitle/TitleSection\";\nimport { Color } from \"../../styles/colors\";\nimport conferenceData from \"../../data/2023.json\";\nimport {\n  StyledMarginBottom,\n  StyledSpeakersSection,\n  StyledTitleContainer,\n  StyledTitleIcon,\n  StyledWaveContainer,\n} from \"./Talks.style\";\nimport TrackInformation from \"./components/TrackInformation\";\nimport { useFetchTalks } from \"./UseFetchTalks\";\nimport * as Sentry from \"@sentry/react\";\nimport { Dropdown, DropdownChangeEvent } from \"primereact/dropdown\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"../../styles/theme.css\";\n\ninterface TrackInfo {\n  name: string;\n  code?: string;\n}\n\nconst Talks: FC = () => {\n  const [selectedGroupId, setSelectedGroupId] = useState<TrackInfo | null>(\n    null\n  );\n  const { isLoading, error, data } = useFetchTalks();\n\n  useEffect(() => {\n    const sessionSelectedGroupCode =\n      sessionStorage.getItem(\"selectedGroupCode\");\n    const sessionSelectedGroupName =\n      sessionStorage.getItem(\"selectedGroupName\");\n\n    document.title = `Talks - DevBcn - ${conferenceData.edition}`;\n\n    if (sessionSelectedGroupCode && sessionSelectedGroupName) {\n      setSelectedGroupId({\n        name: sessionSelectedGroupName,\n        code: sessionSelectedGroupCode,\n      });\n    }\n  }, []);\n\n  if (error) {\n    Sentry.captureException(error);\n  }\n\n  const dropDownOptions = [\n    { name: \"All Tracks\", code: undefined },\n    ...(data !== undefined\n      ? data.flatMap((group) => ({\n          code: group.groupId.toString(),\n          name: group.groupName,\n        }))\n      : []),\n  ];\n\n  const filteredTalks = selectedGroupId?.code\n    ? data?.filter((talk) => talk.groupId.toString() === selectedGroupId.code)\n    : data;\n\n  const onChangeSelectedTrack = (e: DropdownChangeEvent) => {\n    const value = e.value;\n    setSelectedGroupId(value || null);\n    sessionStorage.setItem(\"selectedGroupCode\", value?.code || \"\");\n    sessionStorage.setItem(\"selectedGroupName\", value?.name || \"\");\n  };\n  return (\n    <>\n      <SectionWrapper color={Color.DARK_BLUE} marginTop={5}>\n        <StyledSpeakersSection>\n          <StyledTitleContainer>\n            <StyledTitleIcon src={LessThanDarkBlueIcon} />\n            <TitleSection\n              title=\"TALKS\"\n              subtitle=\"Speakers coming from all corners of the world join us to\n              share their experience in various technologies and to\n              invite everyone to participate in Open Source\n              Technologies and in the JCP.\"\n              color={Color.WHITE}\n            />\n            <StyledTitleIcon src={MoreThanBlueIcon} />\n          </StyledTitleContainer>\n        </StyledSpeakersSection>\n      </SectionWrapper>\n      <StyledWaveContainer>\n        <svg\n          viewBox=\"0 0 500 150\"\n          preserveAspectRatio=\"none\"\n          style={{ height: \"100%\", width: \"100%\" }}\n        >\n          <path\n            d=\"M-3.72,102.14 C177.43,5.44 270.54,146.54 508.12,51.80 L500.00,150.00 L0.00,150.00 Z\"\n            style={{ stroke: \"none\", fill: \"#4798CA\" }}\n          ></path>\n        </svg>\n      </StyledWaveContainer>\n      <SectionWrapper color={Color.LIGHT_BLUE} marginTop={1}>\n        <section>\n          {isLoading && <h1>Loading </h1>}\n          {data && data?.length === 0 && (\n            <p style={{ color: Color.WHITE, textAlign: \"center\" }}>\n              No talks selected yet. Keep in touch in our social media for\n              upcoming announcements\n            </p>\n          )}\n          {filteredTalks && Array.isArray(filteredTalks) && (\n            <>\n              <div style={{ margin: \"10px\" }}>\n                <label htmlFor=\"group-id-select\">\n                  <strong>Filter by Track: </strong>\n                </label>\n                <Dropdown\n                  value={selectedGroupId}\n                  onChange={onChangeSelectedTrack}\n                  options={dropDownOptions}\n                  placeholder=\"Select Track\"\n                  optionLabel=\"name\"\n                  className=\"w-full md:w-14rem\"\n                />\n              </div>\n              {filteredTalks.map((track) => (\n                <TrackInformation key={track.groupId} track={track} />\n              ))}\n            </>\n          )}\n        </section>\n        <StyledMarginBottom />\n      </SectionWrapper>\n    </>\n  );\n};\n\nexport default Talks;\n"],"names":["StyledJobsInfo","styled","motion","Color","StyledLocationContainer","StyledLocationImage","StyledLocationText","StyledJobsButton","StyledJobsText","item","isOdd","index","direction","padding","src","require","align","title","LocationIcon","location","text","to","className","StyledTitleContainer","StyledTitleIcon","BIG_BREAKPOINT","StyledSpeakersSection","StyledWaveContainer","TABLET_BREAKPOINT","StyledMarginBottom","StyledSessionText","StyledSessionCard","StyledTagsWrapper","StyledTalkTitle","Link","StyledTrackInfo","StyledSessionSection","StyledTalkSpeaker","TalkCard","talk","ROUTE_TALK_DETAIL","id","speakers","map","speaker","ROUTE_SPEAKER_DETAIL","name","extractSessionCategoryInfo","categories","CategoryItemEnum","extractSessionTags","questionAnswers","tag","Tag","TrackInformation","trackName","track","anchorName","groupName","useMemo","split","word","replace","toLowerCase","style","marginLeft","Array","isArray","sessions","session","React","useState","selectedGroupId","setSelectedGroupId","useFetchTalks","isLoading","error","data","useEffect","sessionSelectedGroupCode","sessionStorage","getItem","sessionSelectedGroupName","document","conferenceData","code","Sentry","dropDownOptions","undefined","flatMap","group","groupId","toString","filteredTalks","filter","SectionWrapper","color","marginTop","LessThanDarkBlueIcon","TitleSection","subtitle","MoreThanBlueIcon","viewBox","preserveAspectRatio","height","width","d","stroke","fill","length","textAlign","margin","htmlFor","value","onChange","e","setItem","options","placeholder","optionLabel"],"sourceRoot":""}